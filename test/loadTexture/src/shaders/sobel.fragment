sampler2D texture;
varying vec2 vTexCoord;


const mat3 sobelH = {	1.0,2.0,1.0,
						0.0,0.0,0.0,
						-1.0,-2.0,-1.0};

const mat3 sobelV = {	-1.0,0.0,1.0,
						-2.0,0.0,2.0,
						-1.0,0.0,1.0};

void main (void)  
{  
	float desp = 0.001;

	vec4 c1 = texture2D(texture, vTexCoord + vec2(-desp,-desp)); 
	vec4 c2 = texture2D(texture, vTexCoord + vec2(-desp,0.0)); 
	vec4 c3 = texture2D(texture, vTexCoord + vec2(-desp,desp)); 
	vec4 c4 = texture2D(texture, vTexCoord + vec2(0.0,-desp)); 
	vec4 c5 = texture2D(texture, vTexCoord + vec2(0.0,0.0)); 
	vec4 c6 = texture2D(texture, vTexCoord + vec2(0.0,desp)); 
	vec4 c7 = texture2D(texture, vTexCoord + vec2(desp,-desp)); 
	vec4 c8 = texture2D(texture, vTexCoord + vec2(desp,0.0)); 
	vec4 c9 = texture2D(texture, vTexCoord + vec2(desp,desp)); 
	
	mat3 rMat;
	rMat[0] = vec3(c1.r, c2.r, c3.r);
	rMat[1] = vec3(c4.r, c5.r, c6.r);
	rMat[2] = vec3(c6.r, c7.r, c8.r); 
	
	mat3 rMatH = matrixCompMult(rMat, sobelH);
	mat3 rMatV = matrixCompMult(rMat, sobelV);

	float Gx = 0.0;
	for(int i = 0 ; i < 3 ; i ++){
		for(int j = 0; j < 3 ; j ++){
			Gx += rMatH[i][j];
		}
	}


	float Gy = 0.0;
	for(int i = 0 ; i < 3 ; i ++){
		for(int j = 0; j < 3 ; j ++){
			Gy += rMatV[i][j];
		}
	}

	
	float rVal = sqrt(pow(Gx,2) + pow(Gy, 2));

	vec4 color = vec4(0.0,0.0,0.0,1.0);
	if(rVal > 0.3){
		color = vec4(1.0,1.0,1.0,1.0);	
	}
	

	gl_FragColor = color;
}    

